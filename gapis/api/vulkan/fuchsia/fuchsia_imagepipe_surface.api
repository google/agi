// Copyright (C) 2023 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

// ----------------------------------------------------------------------------
// VK_FUCHSIA_imagepipe_surface
// ----------------------------------------------------------------------------

///////////////
// Constants //
///////////////

@extension("VK_FUCHSIA_imagepipe_surface") define VK_FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION   1
@extension("VK_FUCHSIA_imagepipe_surface") define VK_FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME "VK_FUCHSIA_imagepipe_surface"

///////////
// Types //
///////////

@internal type size zx_handle_t

@extension("VK_FUCHSIA_imagepipe_surface")
type VkFlags VkImagePipeSurfaceCreateFlagsFUCHSIA

/////////////
// Structs //
/////////////

@extension("VK_FUCHSIA_imagepipe_surface")
class VkImagePipeSurfaceCreateInfoFUCHSIA {
  VkStructureType                       sType
  const void*                           pNext
  VkImagePipeSurfaceCreateFlagsFUCHSIA  flags
  zx_handle_t                           imagePipeHandle
}

//////////////
// Commands //
//////////////

@platform("VK_USE_PLATFORM_FUCHSIA")
@extension("VK_FUCHSIA_imagepipe_surface")
@indirect("VkInstance")
cmd VkResult vkCreateImagePipeSurfaceFUCHSIA(
    VkInstance                                  instance,
    const VkImagePipeSurfaceCreateInfoFUCHSIA*  pCreateInfo,
    const VkAllocationCallbacks*                pAllocator,
    VkSurfaceKHR*                               pSurface) {

    info := pCreateInfo[0]
    surface := new!SurfaceObject()
    surface.Instance = instance
    surface.Type = SURFACE_TYPE_IMAGEPIPE_FUCHSIA

    if info.pNext != null {
      vkErrorNotNullPointer("const void* (pNext)")
    }

    handle := ?
    pSurface[0] = handle
    surface.VulkanHandle = handle
    Surfaces[handle] = surface

    return ?
}
