// Copyright (C) 2021 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

///////////////
// Constants //
///////////////

@extension("VK_EXT_provoking_vertex") define VK_EXT_PROVOKING_VERTEX_SPEC_VERSION   1
@extension("VK_EXT_provoking_vertex") define VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME "VK_EXT_provoking_vertex"

///////////////
// Enums //
///////////////

@extension("VK_EXT_provoking_vertex")
enum VkProvokingVertexModeEXT {
  VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT = 0,
  VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT = 1,
  VK_PROVOKING_VERTEX_MODE_MAX_ENUM_EXT = 0x7FFFFFFF
}

///////////////
// Structs //
///////////////

@extension("VK_EXT_provoking_vertex")
class VkPhysicalDeviceProvokingVertexFeaturesEXT {
    VkStructureType    sType
    void*              pNext
    VkBool32           provokingVertexLast
    VkBool32           transformFeedbackPreservesProvokingVertex
}

@extension("VK_EXT_provoking_vertex")
class VkPhysicalDeviceProvokingVertexPropertiesEXT {
    VkStructureType    sType
    void*              pNext
    VkBool32           provokingVertexModePerPipeline
    VkBool32           transformFeedbackPreservesTriangleFanProvokingVertex
}

@extension("VK_EXT_provoking_vertex")
class VkPipelineRasterizationProvokingVertexStateCreateInfoEXT {
    VkStructureType             sType
    const void*                 pNext
    VkProvokingVertexModeEXT    provokingVertexMode
}


@internal
class PhysicalDeviceProvokingVertexFeaturesEXT {
    VkBool32           ProvokingVertexLast
    VkBool32           TransformFeedbackPreservesProvokingVertex
}

@internal
class PhysicalDeviceProvokingVertexPropertiesEXT {
    VkBool32           ProvokingVertexModePerPipeline
    VkBool32           TransformFeedbackPreservesTriangleFanProvokingVertex
}

@internal
class PipelineRasterizationProvokingVertexStateCreateInfoEXT {
    VkProvokingVertexModeEXT    ProvokingVertexMode
}
