// Copyright (C) 2021 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Based off of the original vulkan.h header file which has the following
// license.

// Copyright (c) 2015 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the
// "Materials"), to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.

///////////////
// Constants //
///////////////

@extension("VK_EXT_blend_operation_advanced") define VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION   2
@extension("VK_EXT_blend_operation_advanced") define VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME "VK_EXT_blend_operation_advanced"

///////////////
// Structs //
///////////////

@extension("VK_EXT_blend_operation_advanced")
class VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT {
    VkStructureType    sType
    void*              pNext
    VkBool32           advancedBlendCoherentOperations
}

@internal
class PhysicalDeviceBlendOperationAdvancedFeaturesEXT {
    VkBool32           AdvancedBlendCoherentOperations
}

@extension("VK_EXT_blend_operation_advanced")
class VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT {
    VkStructureType    sType
    void*              pNext
    u32                advancedBlendMaxColorAttachments
    VkBool32           advancedBlendIndependentBlend
    VkBool32           advancedBlendNonPremultipliedSrcColor
    VkBool32           advancedBlendNonPremultipliedDstColor
    VkBool32           advancedBlendCorrelatedOverlap
    VkBool32           advancedBlendAllOperations
}

@internal
class PhysicalDeviceBlendOperationAdvancedPropertiesEXT {
    u32                AdvancedBlendMaxColorAttachments
    VkBool32           AdvancedBlendIndependentBlend
    VkBool32           AdvancedBlendNonPremultipliedSrcColor
    VkBool32           AdvancedBlendNonPremultipliedDstColor
    VkBool32           AdvancedBlendCorrelatedOverlap
    VkBool32           AdvancedBlendAllOperations
}

@extension("VK_EXT_blend_operation_advanced")
class VkPipelineColorBlendAdvancedStateCreateInfoEXT {
    VkStructureType      sType
    const void*          pNext
    VkBool32             srcPremultiplied
    VkBool32             dstPremultiplied
    VkBlendOverlapEXT    blendOverlap
}

@internal
class PipelineColorBlendAdvancedStateCreateInfoEXT {
    VkBool32             SrcPremultiplied
    VkBool32             DstPremultiplied
    VkBlendOverlapEXT    BlendOverlap
}
